group 'com.tajnyprojekt'
version LIB_VERSION

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    doclava
}

dependencies {

    doclava 'com.google.doclava:doclava:1.0.6'

    // ogl
    compile "org.jogamp.gluegen:gluegen-rt:2.3.2"
    compile "org.jogamp.jogl:jogl-all:2.3.2"

    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-android-aarch64"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-android-armv6"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-amd64"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-armv6"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-armv6hf"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-linux-i586"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-macosx-universal"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-solaris-amd64"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-solaris-i586"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-windows-amd64"
    runtime "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-windows-i586"

    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-android-aarch64"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-android-armv6"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-amd64"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-armv6"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-armv6hf"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-linux-i586"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-macosx-universal"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-solaris-amd64"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-solaris-i586"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-windows-amd64"
    runtime "org.jogamp.jogl:jogl-all:2.3.2:natives-windows-i586"

    compile group: 'org.processing', name: 'core', version: '3.3.7'

    // Robert Penner's easing library, see reference for github url
    compile fileTree(dir: "${OUT_PATH}/library", include: 'easing.jar')
}

// run PApplet from example
task runApp (dependsOn: 'classes', type: JavaExec) {
    println "Starting app ${rootProject.name}"
    jvmArgs = []
    main = "example.App"
    classpath = sourceSets.main.runtimeClasspath
}

// documentation related tasks

task cleanDocs(type: Delete) {
    delete "${OUT_PATH}/reference"
}

task copyDocsTheme(type: Copy) {
    from "assets/docs-theme"
    into "${OUT_PATH}/reference"
}

javadoc {
    dependsOn cleanDocs, project.configurations.doclava
    finalizedBy copyDocsTheme

    failOnError = true
    source = sourceSets.main.java.srcDirs
    exclude "example"
    classpath = sourceSets.main.runtimeClasspath
    destinationDir = file("${OUT_PATH}/reference")
    title = null
    options.doclet = "com.google.doclava.Doclava"
    options.docletpath = configurations.doclava.files.asType(List)
}

// packaging

task cleanLibrary(type: Delete) {
    delete fileTree("${OUT_PATH}/library") { include 'TpAnimation*.jar' }
}

task copyLibrary(type: Copy) {
    from "build/libs/"
    into "${OUT_PATH}/library"
}

String bindTmpl(tmpl, output, params) {
    def engine = new groovy.text.SimpleTemplateEngine()
    output.write engine.createTemplate(tmpl).make(params).toString()
}

task genetareLibraryProperties {
    bindTmpl(
            file("assets/library.properties.tmpl"),
            file("${OUT_PATH}/library.properties"),
            [
                    title: LIB_TITLE,
                    version: LIB_VERSION,
                    author: LIB_AUTHOR,
                    buildNumber: 1,
            ])
}

jar {
    finalizedBy copyLibrary, genetareLibraryProperties, javadoc
    exclude "example"
    archiveName "${LIB_TITLE}.${jar.extension}"
}
